{"version":3,"sources":["components/Navbar/SignedInLinks.jsx","store/actions/authActions.js","components/Navbar/SignedOutLinks.jsx","components/Navbar/Navbar.jsx","components/Dashboard/Notifications.jsx","components/Posts/PostSummary.jsx","components/Posts/AllPosts.jsx","components/Dashboard/Dashboard.jsx","components/User/SignIn.jsx","components/User/SignUp.jsx","components/Posts/CreateNewPost.jsx","store/actions/postActions.js","components/Posts/PostDetails.jsx","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/postReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","react_router_dom","to","profile","initials","href","onClick","SignedOutLinks","state","firebase","links","uid","Navbar_SignedInLinks","Navbar_SignedOutLinks","Notifications","notifications","className","map","notification","key","id","user","content","moment","time","toDate","fromNow","PostSummary","_ref","post","title","authorFirstName","authorLastName","createdAt","AllPosts","posts","Posts_PostSummary","Dashboard","_this$props","this","Posts_AllPosts","Dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","placeholder","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","password2","signUp","autoComplete","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateNewPost","createPost","history","push","name","cols","rows","authorId","add","objectSpread","Date","ownProps","match","params","data","deletePost","delete","App","components_Navbar_Navbar","exact","path","component","PostDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","postReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e647a38.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul>\r\n      <li><NavLink to=\"/createnewpost\">Create New Post</NavLink></li>\r\n      <li><NavLink to=\"/profile/:id\"></NavLink>{props.profile.initials}</li>\r\n      <li><a href=\"/\" onClick={props.signOut}>Sign Out</a></li>\r\n    </ul>\r\n  )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => {\r\n      dispatch(signOut());\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: \"LOGIN_SUCCESS\" })\r\n    }).catch((error) => {\r\n      dispatch({ type: \"LOGIN_ERROR\", error });\r\n    });\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((res) => {\r\n      return firestore.collection(\"users\").doc(res.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0],\r\n      })\r\n    }).then(() => {\r\n      dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n    }).catch((error) => {\r\n      dispatch({ type: \"SIGNUP_ERROR\", error});\r\n    });\r\n  }\r\n}","import React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul>\r\n      <li><NavLink to=\"/signin\">SignIn</NavLink></li>\r\n      <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    (\r\n      <SignedInLinks profile={profile} />\r\n    )\r\n    ) : (\r\n      <SignedOutLinks />\r\n  )\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">Logo</Link>\r\n      { links }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = (props) => {\r\n  const {notifications} = props;\r\n\r\n  return (\r\n    <div className=\"notification-section\">\r\n      <div className=\"card\">\r\n        <div className=\"card\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {               \r\n              notifications && notifications.map(notification => {\r\n                return (\r\n                  <li key={notification.id}>\r\n                    <span>{notification.user} </span>\r\n                    <span>{notification.content}</span>\r\n                    <div>{moment(notification.time.toDate()).fromNow()}</div>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications;","import React from 'react'\r\nimport moment from \"moment\";\r\n\r\n\r\nconst PostSummary = ({post}) => {\r\n  return (\r\n    <div className=\"post-summary\">\r\n      <div className=\"post-content\">\r\n        <h2 className=\"post-title\">{post.title}</h2>\r\n        <p className=\"post-author\">by: {post.authorFirstName} {post.authorLastName}</p>\r\n        <p className=\"post-date\">{moment(post.createdAt.toDate()).fromNow()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostSummary;","import React from \"react\";\r\nimport PostSummary from \"./PostSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AllPosts = ({posts}) => {\r\n  return (\r\n    <div className=\"post-list\">\r\n      { posts && posts.map((post) => {\r\n        return (\r\n          <Link to={\"/post/\" + post.id} key={post.id}>\r\n            <PostSummary post={post} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllPosts;","import React, { Component } from 'react';\r\nimport Notifications from \"./Notifications\";\r\nimport AllPosts from \"../Posts/AllPosts\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { posts, auth, notifications } = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <div>\r\n          <AllPosts posts={posts} />\r\n        </div>\r\n        <div>\r\n          <Notifications notifications={notifications} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.firestore.ordered.posts,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps), \r\n  firestoreConnect([\r\n    { collection: 'posts', orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: 'notifications', limit: 5, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className=\"sign-in-form\">\r\n          <h5>Sign In</h5>\r\n          <div>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} placeholder=\"E-Mail\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n          </div>\r\n          <div>\r\n            <input type=\"submit\" value=\"Sign In\"/>\r\n            <div>\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => {\r\n      dispatch(signIn(creds));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    password: \"\",\r\n    password2: \"\"\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className=\"sign-up-form\">\r\n          <h5>Sign Up</h5>\r\n          <div>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input onChange={this.handleChange} type=\"email\" id=\"email\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input onChange={this.handleChange} type=\"text\" id=\"firstName\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input autoComplete=\"foo\" onChange={this.handleChange} type=\"text\" id=\"lastName\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input autoComplete=\"foo\" onChange={this.handleChange} type=\"password\" id=\"password\"/>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password2\">Repeat Password</label>\r\n            <input autoComplete=\"foo\" onChange={this.handleChange} type=\"password\" id=\"password2\"/>\r\n          </div>\r\n          <div>\r\n            <input type=\"submit\" value=\"Sign Up\"/>\r\n          </div>\r\n          <div>{ authError ? <p>{ authError }</p> : null}</div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => {\r\n      dispatch(signUp(newUser));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost } from \"../../store/actions/postActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateNewPost extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.createPost(this.state);\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\nrender() {\r\n  const { auth } = this.props;\r\n  if (!auth.uid) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  return (\r\n    <form onSubmit={this.handleSubmit}>\r\n      <label htmlFor=\"title\">Title:</label>\r\n      <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n      <label htmlFor=\"content\">Content:</label>\r\n      <textarea name=\"\" id=\"content\" cols=\"30\" rows=\"10\" onChange={this.handleChange}></textarea>\r\n      <button type=\"submit\" className=\"btn btn-primary\">Create Post</button>\r\n    </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createPost: (post) => {\r\n      dispatch(createPost(post));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateNewPost);","export const createPost = (post) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection(\"posts\").add({\r\n      ...post,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: \"CREATE_POST\", post });\r\n    }).catch((error) => {\r\n      dispatch({ type: \"CREATE_POST_ERROR\", error});\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePost = (post) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore.collection(\"posts\").doc(post).delete().then(() => {\r\n      dispatch({ type: \"DELETE_POST\", post });\r\n    }).catch((error) => {\r\n      dispatch(\"DELETE_POST_ERROR\", error);\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { deletePost } from \"../../store/actions/postActions\";\r\n\r\n\r\nconst PostDetails = (props) => {\r\n  const { post, auth } = props;\r\n  if (!auth.uid) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  \r\n  function handleDelete() {\r\n    props.deletePost(props.match.params.id);\r\n    props.history.push(\"/\");\r\n  \r\n  }\r\n\r\n  if (post) {\r\n    return (\r\n      <div className=\"post-details\">\r\n        <div className=\"post-content\">\r\n          <span className=\"post-title\">{post.title}</span>\r\n          <p>{post.content}</p>\r\n        </div>\r\n        <div>\r\n          <div className=\"post-author\">by: {post.authorFirstName} {post.authorLastName}</div>\r\n          <div className=\"post-date\">{moment(post.createdAt.toDate()).fromNow()}</div>\r\n        </div>\r\n        { post.authorId === auth.uid ? (<input type=\"button\" onClick={ () => { handleDelete() } } value=\"Delete\" />) : null }\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>Loading...</div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const posts = state.firestore.data.posts;\r\n  const post = posts ? posts[id] : null;\r\n  return {\r\n    post: post,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deletePost: (post) => {\r\n      dispatch(deletePost(post));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([{ collection: \"posts\" }\r\n  ])\r\n)(PostDetails);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Notifications from \"./components/Dashboard/Notifications\";\nimport SignIn from \"./components/User/SignIn\";\nimport SignUp from \"./components/User/SignUp\";\nimport CreateNewPost from './components/Posts/CreateNewPost';\nimport PostDetails from \"./components/Posts/PostDetails\";\nimport \"./index.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route exact path=\"/\" component={Notifications} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/createnewpost\" component={CreateNewPost} />\n            <Route path=\"/post/:id\" component={PostDetails} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n      case \"SIGNUP_ERROR\": \r\n        console.log(\"signup error\");\r\n        return {\r\n          ...state,\r\n          authError: action.error.message\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n  posts: [\r\n    {id: \"1\", title: \"test1\", content: \"This is a test1 post\"},\r\n    {id: \"2\", title: \"test2\", content: \"This is a test2 post\"},\r\n    {id: \"3\", title: \"test3\", content: \"This is a test3 post\"},\r\n  ]\r\n}\r\n\r\nconst postReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case \"CREATE_POST\": \r\n      console.log(\"created post\");\r\n      return state;\r\n    case \"CREATE_POST_ERROR\":\r\n      console.log(\"create post error\");\r\n      return state;\r\n    case \"DELETE_POST\":\r\n      console.log(\"deleted post\");\r\n      return state;\r\n    case \"DELETE_POST_ERROR\":\r\n      console.log(\"delete post error\");\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default postReducer;","import authReducer from \"./authReducer\";\r\nimport postReducer from \"./postReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  post: postReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: \"AIzaSyDsOCGmbIffwetuH2pjeri-vw22u4wOz5s\",\r\n  authDomain: \"test-api-db.firebaseapp.com\",\r\n  databaseURL: \"https://test-api-db.firebaseio.com\",\r\n  projectId: \"test-api-db\",\r\n  storageBucket: \"test-api-db.appspot.com\",\r\n  messagingSenderId: \"363836535626\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(rootReducer,\n  compose(\n  applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n  reduxFirestore(fbConfig),\n  reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: \"users\", attachAuthIsReady: true})\n    )\n  );\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n});"],"sourceRoot":""}